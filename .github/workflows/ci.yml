name: ci

on:
  push:
    branches:
      - main  # veya sizin kullandığınız branch adı

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/arm64
          tags: ${{ vars.DOCKERHUB_USERNAME }}/todoapp:latest
          build-args: |
            NO_CACHE=true
          no-cache: true

  deploy:
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl patch deployment ingress-nginx-controller -n ingress-nginx --type=json -p '[{"op": "remove", "path": "/spec/template/spec/nodeSelector"}]'
          kubectl rollout restart deployment ingress-nginx-controller -n ingress-nginx
          kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=120s
          kubectl get pods -n ingress-nginx
          kubectl apply -f k8s/postgres.yaml
          kubectl apply -f k8s/todoapp.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl rollout status deployment/todoapp

      - name: Debug pod if deployment fails
        if: failure()
        run: kubectl describe pod -l app=todoapp
